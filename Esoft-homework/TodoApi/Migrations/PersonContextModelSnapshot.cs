// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApi.Models;

namespace TodoApi.Migrations
{
    [DbContext(typeof(PersonContext))]
    partial class PersonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("PersonRelation", b =>
                {
                    b.Property<long>("PersonsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RelationsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonsId", "RelationsId");

                    b.HasIndex("RelationsId");

                    b.ToTable("PersonRelation");
                });

            modelBuilder.Entity("TodoApi.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BirthYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("TodoApi.Models.Relation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("connection")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Relation");
                });

            modelBuilder.Entity("PersonRelation", b =>
                {
                    b.HasOne("TodoApi.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApi.Models.Relation", null)
                        .WithMany()
                        .HasForeignKey("RelationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
